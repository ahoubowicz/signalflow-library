from signalfx.detectors.autodetect import utils
from signalfx.detectors.autodetect.infra.aws import utils as aws_utils
from signalfx.detectors.countdown import countdown


def disk_space_running_out_detector(fire_threshold: int = 48, clear_threshold: int = 96,
                                    fire_lasting: lasting = lasting('10m', 0.8), filter_: filter = None):
    # Detects when AWS/RDS free disk space is going to run out
    # :param fire_threshold specifies fire threshold for space running out (in hours)
    # :param fire_threshold label=Trigger threshold
    # :param clear_threshold specifies clear threshold for space running out (in hours)
    # :param clear_threshold label=Clear threshold
    # :param fire_lasting specifies lasting object associated with fire threshold
    # :param fire_lasting label=Sensitivity
    # :param filter_ specifies dimensional scope of the detector
    # :param filter_ metric_name=FreeStorageSpace
    # :return: detect block that triggers when AWS/RDS free disk space is going to run out
    initial_filter = filter(utils.NAMESPACE_DIM, aws_utils.RDS_NAMESPACE)\
                     and filter(aws_utils.DB_INSTANCE_IDENTIFIER_DIM, '*') \
                     and filter(utils.STAT_DIM, 'mean')
    scope_filter = utils.merge_filters(initial_filter, filter_)
    stream = data('FreeStorageSpace', filter=scope_filter)
    return countdown.hours_left_stream_detector(stream=stream, minimum_value=0, lower_threshold=fire_threshold,
                                                fire_lasting=fire_lasting, clear_threshold=clear_threshold,
                                                clear_lasting=fire_lasting, use_double_ewma=False,
                                                auto_resolve_after=utils.AUTO_RESOLVE_AFTER)
